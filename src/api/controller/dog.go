/*
"Generated by OpenAI's chatGPT" - w/ modifications
*/
package controller

import (
	"math/rand"
	"net/http"

	"github.com/TimetoPretend54/go-chatgpt-copilot/model"
	"github.com/TimetoPretend54/go-chatgpt-copilot/service"
	"github.com/labstack/echo/v4"
)

type DogController struct {
	Service service.IAnimalService
}

var dogs = []model.Dog{
	{Name: "Max", Breed: "Golden Retriever", Age: 5},
	{Name: "Buddy", Breed: "Labrador Retriever", Age: 7},
	{Name: "Daisy", Breed: "Beagle", Age: 3},
	{Name: "Charlie", Breed: "Poodle", Age: 2},
}

// GetDog returns a dog
func (ctl *DogController) GetDog(c echo.Context) error {
	// Call Service
	ctl.Service.DoSomething("test")

	dog := dogs[rand.Intn(len(dogs))]
	return c.JSON(http.StatusOK, dog)
}

// GetDogs returns a list of dogs
func (ctl *DogController) GetDogs(c echo.Context) error {
	return c.JSON(http.StatusOK, dogs)
}

// AddDog adds a dog
func (ctl *DogController) AddDog(c echo.Context) error {
	var newDog model.Dog
	if err := c.Bind(&newDog); err != nil {
		return err
	}
	dogs = append(dogs, newDog)
	return c.JSON(http.StatusOK, newDog)
}

// GetDogByID retrieves a specific dog by its ID - GitHub Co-Pilot Generated
func (ctl *DogController) GetDogByName(c echo.Context) error {
	name := c.Param("name")
	for _, d := range dogs {
		if d.Name == name {
			return c.JSON(http.StatusOK, &d)
		}
	}
	return c.JSON(http.StatusInternalServerError, "No Dog Found")
}
