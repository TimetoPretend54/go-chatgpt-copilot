/*
"Generated by OpenAI's chatGPT" - w/ modifications
*/
package handler

import (
	"math/rand"
	"net/http"

	"github.com/TimetoPretend54/go-chatgpt-copilot/model"
	"github.com/labstack/echo/v4"
)

// Cat structure for holding cat information
type Cat struct {
	Name  string `json:"name"`
	Breed string `json:"breed"`
	Age   int    `json:"age"`
}

var cats = []model.Cat{
	{Name: "Whiskers", Breed: "Siamese", Age: 5},
	{Name: "Shadow", Breed: "Persian", Age: 3},
	{Name: "Socks", Breed: "Tabby", Age: 4},
}

// GetCat returns a cat
func GetCat(c echo.Context) error {
	cat := cats[rand.Intn(len(cats))]
	return c.JSON(http.StatusOK, cat)
}

// GetCats returns a list of dogs
func GetCats(c echo.Context) error {
	return c.JSON(http.StatusOK, cats)
}

// AddCat adds a cat
func AddCat(c echo.Context) error {
	var newCat model.Cat
	if err := c.Bind(&newCat); err != nil {
		return err
	}
	cats = append(cats, newCat)
	return c.JSON(http.StatusOK, newCat)
}

// GetDogByID retrieves a specific dog by its ID - GitHub Co-Pilot Generated
func GetCatByName(c echo.Context) error {
	name := c.Param("name")
	for _, d := range cats {
		if d.Name == name {
			return c.JSON(http.StatusOK, &d)
		}
	}
	return c.JSON(http.StatusInternalServerError, "No Cat Found")
}
